name: Build smt-scope Docker image

on:
  push:
    branches: 'main'

permissions:
  contents: write

jobs:
  docker:
    strategy:
        matrix:
          arch: [ { name: amd64, os: ubuntu-latest }, { name: arm64, os: ubuntu-24.04-arm }]
    runs-on: ${{ matrix.arch.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Move /var/lib/docker/
        run: sudo mv /var/lib/docker/ "${GITHUB_WORKSPACE}/docker"

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
            root-reserve-mb: 512
            temp-reserve-mb: 32
            swap-size-mb: 32
            remove-dotnet: 'true'
            remove-android: 'true'
            remove-haskell: 'true'
            remove-codeql: 'true'
            build-mount-path: '/var/lib/docker/'

      - name: Restore /var/lib/docker/
        run: |
            sudo sh -c "mv ${GITHUB_WORKSPACE}/docker/* /var/lib/docker"
            sudo chmod 777 /var/lib/docker

    #   - name: Set up QEMU
    #     uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: jonasalaif
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build ${{ matrix.arch.name }} SMTScope image
        run: sudo docker buildx build --platform linux/${{ matrix.arch.name }} --load -t jonasalaif/smt-scope:${{ matrix.arch.name }} .

    #   - name: Run evaluation intro
    #     run: |
    #       cd sources
    #       docker run --rm --network none -v ${PWD}/demo.rs:/demo.rs jonasalaif/smt-scope:${{ matrix.arch.name }} run --release --bin ruslic /demo.rs
    #       docker run --rm --network none jonasalaif/smt-scope:${{ matrix.arch.name }} run --release --bin cargo-russol -- --manifest-path=/home/sbtuser/demo/Cargo.toml
    #       docker run --rm --network none -v ${PWD}/russol-alpha/ruslic/tests/synth/paper/rust/b-stackoverflow/reborrow.rs:/reborrow.rs jonasalaif/smt-scope:${{ matrix.arch.name }} run --release --bin ruslic /reborrow.rs
    #       docker run --rm --network none -v ${PWD}/russol-alpha/ruslic/tests/synth/paper/rust/c-custom/list_ex/list_paper.rs:/list_paper.rs jonasalaif/smt-scope:${{ matrix.arch.name }} run --release --bin ruslic /list_paper.rs
    #   - name: Run evaluation benchmarks
    #     if: ${{ matrix.arch.name == 'amd64' }}
    #     run: |
    #       cd sources
    #       docker run --rm --network none jonasalaif/smt-scope:${{ matrix.arch.name }} test --release --test ci -- all_tests --nocapture
    #   - name: Run evaluation top 100 crates
    #     if: ${{ matrix.arch.name == 'amd64' }}
    #     run: |
    #       cd sources
    #       docker run --rm --network none jonasalaif/smt-scope:${{ matrix.arch.name }} test --release --test top_crates -- top_crates_cached --nocapture

      - name: Save ${{ matrix.arch.name }} SMTScope image
        run: |
          sudo docker tag jonasalaif/smt-scope:${{ matrix.arch.name }} jonasalaif/smt-scope:latest
          sudo docker save jonasalaif/smt-scope:latest | gzip > /var/lib/docker/smt-scope-${{ matrix.arch.name }}.tar.gz
          sudo chmod 666 /var/lib/docker/smt-scope-${{ matrix.arch.name }}.tar.gz

      - name: Upload to Zenodo
        run: |
          BUCKET=$(curl https://zenodo.org/api/deposit/depositions/17491145?access_token="${{ secrets.ZENODO_TOKEN }}" | jq --raw-output .links.bucket)
          FILENAME="smt-scope-${{ matrix.arch.name }}.tar.gz"
          curl -o /dev/null --upload-file "/var/lib/docker/$FILENAME" $BUCKET/"$FILENAME"?access_token="${{ secrets.ZENODO_TOKEN }}"
        #   sudo docker push jonasalaif/smt-scope:${{ matrix.arch.name }}

      - name: Upload release smt-scope-${{ matrix.arch.name }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: /var/lib/docker/smt-scope-${{ matrix.arch.name }}.tar.gz

      - name: Clean up after ${{ matrix.arch.name }} SMTScope image
        run: |
          sudo rm /var/lib/docker/smt-scope-${{ matrix.arch.name }}.tar.gz
          sudo docker rmi jonasalaif/smt-scope

  upload-latest:
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: jonasalaif
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push SMTScope image
        run: |
          sudo docker manifest create jonasalaif/smt-scope:latest jonasalaif/smt-scope:amd64 jonasalaif/smt-scope:arm64
          sudo docker manifest push jonasalaif/smt-scope:latest
